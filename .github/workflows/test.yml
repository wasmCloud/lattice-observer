name: Lattice Observer Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MIX_ENV: test

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
        elixir: [1.13.4]
        otp: [25]

    name: Build and test
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      # Install erlang/OTP and elixir
      - name: Install erlang and elixir
        if: ${{ startswith(matrix.os, 'ubuntu') || startswith(matrix.os, 'windows') }}
        uses: erlef/setup-beam@v1
        with:
          otp-version: "=${{ matrix.otp }}"
          elixir-version: ${{ matrix.elixir }}
          install-hex: true
          install-rebar: true
      - name: Install erlang and elixir
        if: ${{ startswith(matrix.os, 'macos') }}
        run: |
          brew install erlang
          brew install elixir
          mix local.rebar --force
          mix local.hex --force

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2
        id: mix-cache #id to use in retrieve action
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('mix.exs', 'mix.lock') }}

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix do deps.get, deps.compile

      - name: Check Formatting
        if: ${{ !startswith(matrix.os, 'windows') }} # Windows gets angry about carriage returns
        run: mix format --check-formatted

      - name: Run dialyzer
        working-directory: ${{env.working-directory}}
        run: mix dialyzer

      - name: Run NATS for tests
        uses: wasmcloud/common-actions/run-nats@main
        if: ${{ startswith(matrix.os, 'ubuntu') }} # Run on Ubuntu only as a temporary workaround to dependencies that aren't present on windows/mac runners

      - name: Run Tests
        if: ${{ startswith(matrix.os, 'ubuntu') }} # Run on Ubuntu only as a temporary workaround to dependencies that aren't present on windows/mac runners
        env:
          MIX_ENV: test
        run: mix test
